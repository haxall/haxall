//
// Copyright (c) 2025, SkyFoundry LLC
// Licensed under the Academic Free License version 3.0
//
// History:
//   4 Feb 2025  Brian Frank  Creation
//


//////////////////////////////////////////////////////////////////////////
// APIs
//////////////////////////////////////////////////////////////////////////

// ping API
ping1: Func { returns: Date }

// ping API (not bound with facet)
ping2: Func { returns: Date }

//////////////////////////////////////////////////////////////////////////
// Axon
//////////////////////////////////////////////////////////////////////////

// add in Axon
add1: Func { a: Number, b: Number, returns: Number
  <axon:"(a, b) => a + b">
}

// add in Fantom
add2: Func { a: Number, b: Number, returns: Number }

// add in Fantom, but not allowed
add3: Func { a: Number, b: Number, returns: Number }

// add in comp blocks
add4: Func { a: Number, b: Number, returns: Number
  <compTree:---
    @root: Comp {
      a @a: Var {}
      b @b: Var {}
      returns: Var {
        links: {
          val: Link { fromRef: @add, fromSlot: "out"  }
        }
      }
      @add: TestNumberAdd {
        links: {
          in1: Link { fromRef: @a, fromSlot: "val" }
          in2: Link { fromRef: @b, fromSlot: "val" }
        }
      }
    }
    --->
}

//////////////////////////////////////////////////////////////////////////
// Interfaces
//////////////////////////////////////////////////////////////////////////

InterfaceA: Interface {
  m1: Func <new> { returns: Self }
  m9: Func <new> { returns: Self }

  s1: Func <static> { returns: Obj }
  s9: Func <static> { returns: Obj }

  i1: Func { returns: Obj }
  i2: Func <virtual> { returns: Str }
  i9: Func <virtual> { returns: Str }
}

InterfaceB: InterfaceA {
  m1: Func <new> { returns: Self }
  s1: Func <static> { returns: Str }
  i1: Func { returns: Date }
  i2: Str
}

