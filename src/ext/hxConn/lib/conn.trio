//
// Copyright (c) 2012, SkyFoundry LLC
// Licensed under the Academic Free License version 3.0
//
// History:
//    1 Jul 2012  Brian Frank  Creation
//   28 Feb 2019  Brian Frank  Refactor for new def design
//

--------------------------------------------------------------------------
def: ^conn
is: ^entity
mandatory
doc:
  Connector for communication to a remote system.
  See `docHaxall::Conns`
--------------------------------------------------------------------------
defx: ^disabled
tagOn: ^conn
--------------------------------------------------------------------------
def: ^connFeatures
is: ^dict
doc:
  Defines the features supported by a given connector.  This is
  a tag added to the 'conn' def itself.  The value is a dict with the
  following standardized keys:
  - 'learn': marker tag if point learn is supported
  - 'pollMode': manual or buckets

  Also see `docHaxall::CustomConns#defs`
--------------------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// Tags
//////////////////////////////////////////////////////////////////////////

--------------------------------------------------------------------------
def: ^actorTimeout
is: ^duration
tagOn: ^conn
doc:
  Timeout for messages send to the connector's actor thread.  It must
  be a number with a duration unit.  If omitted a default of 1min is used.
  This value effectively determines how long a blocking remote request should
  take before raising a timeout error.  For protocols which communicate
  via HTTP/TCP it is also used to configure the socket's receive timeout.
  See `docHaxall::ConnTuning#actorTimeout`
--------------------------------------------------------------------------
def: ^connErr
is: ^str
tagOn: ^conn
transient
doc:
  Error message associated when `connStatus` indicates an error condition.
  See `docHaxall::Conns#connState`
--------------------------------------------------------------------------
def: ^connLinger
is: ^duration
tagOn: ^conn
doc:
  Linger timeout used to keep a connector open.
  If not configured then a default of 30sec is used.
  See `docHaxall::ConnTuning#connLinger`
--------------------------------------------------------------------------
def: ^connOpenRetryFreq
is: ^duration
tagOn: ^conn
doc:
  Duration used for connector open retries.  When a connector should be
  pinned opened for application use, then this frequency is used to periodically
  attempt retries.  For example if a down connector has watched points, then
  this frequency is used to determine how often we retry to reopen the
  connection. The default is 10sec if not specified.
  See `docHaxall::ConnTuning#connOpenRetryFreq`
--------------------------------------------------------------------------
def: ^connPingFreq
is: ^duration
tagOn: ^conn
doc:
  Duration used to configure the auto-ping feature on a given connector.
  When this tag is configured the connector will automatically attempt
  a ping based on the configured frequency.  For connectors which might
  not have watched points this ensures periodic checks of the connectivity
  status.  If this tag is not defined on a connector then the feature is
  disabled.  See `docHaxall::ConnTuning#connPingFreq`
--------------------------------------------------------------------------
def: ^connState
is: ^str
tagOn: ^conn
transient
doc:
  Current connection state of a connector as one of the predefined strings.
  See `docHaxall::Conns#connState`
enum: Trio:
  closed:  {icon:"status"  iconColor:"#e67e22", doc:"Connection is closed"}
  closing: {icon:"spinner" iconColor:"#e67e22", doc:"Connection is currently being closed"}
  open:    {icon:"status"  iconColor:"#1ca355", doc:"Connection is open"}
  opening: {icon:"spinner" iconColor:"#1ca355", doc:"Connection is currently being opened"}
--------------------------------------------------------------------------
def: ^connStatus
is: ^str
tagOn: ^conn
transient
doc:
  Current status of a connector as one of the predefined strings
  See `docHaxall::Conns#connState`
enum: Trio:
  ok:       {icon:"check"    iconColor:"#1ca355" doc:"All is okay"}
  fault:    {icon:"err"      iconColor:"#db311f" doc:"Configuration problem"}
  down:     {icon:"warn"     iconColor:"#e67e22" doc:"Communication or network problem"}
  disabled: {icon:"disabled" iconColor:"#a4aeae" doc:"Manual disable"}
  unknown:  {icon:"question" iconColor:"#a4aeae" doc:"Status not computed yet"}
--------------------------------------------------------------------------
def: ^connTraceType
nodoc
is: ^str
doc:
  Standardized conn trace type enumeration
enum: Trio:
  phase:    {dis:"phase",    icon:"gear"      iconColor:"#e74c3c" doc:"Lifecycle phase event"}
  dispatch: {dis:"dispatch", icon:"mail"      iconColor:"#16a085" doc:"Dispatch message"}
  req:      {dis:"req",      icon:"navRight"  iconColor:"#8e44ad" doc:"Outgoing protocol request"}
  res:      {dis:"res",      icon:"navLeft"   iconColor:"#8e44ad" doc:"Incoming protocol response"}
  event:    {dis:"event",    icon:"chevronUp" iconColor:"#8e44ad" doc:"Unsolicited protocol event"}
  log:      {dis:"log",      icon:"info"      iconColor:"#2980b9" doc:"System log tracing"}
  poll:     {dis:"poll",     icon:"recent"    iconColor:"#16a085" doc:"Poll check"}
  hk:       {dis:"hk",       icon:"clock"     iconColor:"#16a085" doc:"House keeping"}
--------------------------------------------------------------------------




