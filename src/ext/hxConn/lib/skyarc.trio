//
// Copyright (c) 2012, SkyFoundry LLC
// Licensed under the Academic Free License version 3.0
//
// History:
//    3 Jan 2022  Brian Frank  Creation
//

//////////////////////////////////////////////////////////////////////////
// Views
//////////////////////////////////////////////////////////////////////////

--------------------------------------------------------------------------
view: conns
appName: conn
disKey: ui::connector
admin
order: 100
doc: "Manage connectors in the local project database"
src:
  view: { uiType:"uiBuilder::ConnBuilder" }
  menu: { action:"uiContextMenu" }
--------------------------------------------------------------------------
view: connTuning
appName: conn
disKey: ui::tuning
defName: connTuning
admin
order: 105
doc: "Manage connector tuning records in the local project database"
src:
  view:    { inherit:"table" }
  search:  { input var kind:"Str" defVal:"" }
  new:     { action:"recNew" }
  edit:    { action:"recEdit" }
  trash:   { action:"recTrash" }
  data:    { expr:"readAll(connTuning, { sort, search:{{search}} })" }
--------------------------------------------------------------------------
view: connTrace
appName: conn
disKey: ui::trace
admin
order: 110
doc: "View debug connector tracing"
src:
  view:    { uiType:"uiBuilder::ConnTraceView" }
  conn:    { input var kind:"Ref<conn>" }
  types:   { input var kind:"Str" defVal:"phase,dispatch,req,res,event,log" uiInput:"uiBuilder::ConnTraceTypesInput" }
  ping:    { action:"connPing" select noFlash }
  close:   { action:"connClose" select noFlash }
  enable:  { action:"connTraceEnable" select noFlash }
  disable: { action:"connTraceDisable" select noFlash }
  clear:   { action:"connTraceClear" select noFlash }
  menu:    { action:"uiContextMenu" selInput:"conn"}
  details: { action:"connBuilderDetails" select }
  data:    { expr:"connTrace({{conn}}, {types:{{types}}})" }
--------------------------------------------------------------------------

//////////////////////////////////////////////////////////////////////////
// Commands
//////////////////////////////////////////////////////////////////////////

--------------------------------------------------------------------------
def: ^command:syncHis
icon: "sync"
admin
typeName: "uiMisc::SyncHisCommand"
--------------------------------------------------------------------------




